# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime


class Aminos(pydantic.BaseModel):
    alanine_g: typing.Optional[int]
    arginine_g: typing.Optional[int]
    asparagine_g: typing.Optional[int]
    aspartic_acid_g: typing.Optional[int]
    cysteine_g: typing.Optional[int]
    glutamine_g: typing.Optional[int]
    glutamic_acid_g: typing.Optional[int]
    glycine_g: typing.Optional[int]
    histidine_g: typing.Optional[int]
    isoleucine_g: typing.Optional[int]
    leucine_g: typing.Optional[int]
    lysine_g: typing.Optional[int]
    methionine_g: typing.Optional[int]
    phenylalanine_g: typing.Optional[int]
    proline_g: typing.Optional[int]
    serine_g: typing.Optional[int]
    threonine_g: typing.Optional[int]
    tryptophan_g: typing.Optional[int]
    tyrosine_g: typing.Optional[int]
    valine_g: typing.Optional[int]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
