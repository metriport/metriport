# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ProviderSource(str, enum.Enum):
    APPLE = "apple"
    CRONOMETER = "cronometer"
    DEXCOM = "dexcom"
    FITBIT = "fitbit"
    GARMIN = "garmin"
    GOOGLE = "google"
    OURA = "oura"
    TENOVI = "tenovi"
    WHOOP = "whoop"
    WITHINGS = "withings"

    def visit(
        self,
        apple: typing.Callable[[], T_Result],
        cronometer: typing.Callable[[], T_Result],
        dexcom: typing.Callable[[], T_Result],
        fitbit: typing.Callable[[], T_Result],
        garmin: typing.Callable[[], T_Result],
        google: typing.Callable[[], T_Result],
        oura: typing.Callable[[], T_Result],
        tenovi: typing.Callable[[], T_Result],
        whoop: typing.Callable[[], T_Result],
        withings: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ProviderSource.APPLE:
            return apple()
        if self is ProviderSource.CRONOMETER:
            return cronometer()
        if self is ProviderSource.DEXCOM:
            return dexcom()
        if self is ProviderSource.FITBIT:
            return fitbit()
        if self is ProviderSource.GARMIN:
            return garmin()
        if self is ProviderSource.GOOGLE:
            return google()
        if self is ProviderSource.OURA:
            return oura()
        if self is ProviderSource.TENOVI:
            return tenovi()
        if self is ProviderSource.WHOOP:
            return whoop()
        if self is ProviderSource.WITHINGS:
            return withings()
