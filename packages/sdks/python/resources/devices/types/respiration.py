# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from .blood_oxygen import BloodOxygen
from .sample import Sample


class Respiration(pydantic.BaseModel):
    vo_2_max: typing.Optional[int] = pydantic.Field(alias="vo2_max")
    spo_2: typing.Optional[BloodOxygen] = pydantic.Field(alias="spo2")
    avg_breaths_per_minute: typing.Optional[int]
    peak_flow_l_min: typing.Optional[int] = pydantic.Field(alias="peak_flow_L_min")
    forced_volume_l: typing.Optional[int] = pydantic.Field(alias="forced_volume_L")
    samples_breaths_per_minute: typing.Optional[typing.List[Sample]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
