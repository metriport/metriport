# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime


class SleepDurations(pydantic.BaseModel):
    total_seconds: typing.Optional[int]
    awake_seconds: typing.Optional[int]
    deep_seconds: typing.Optional[int]
    rem_seconds: typing.Optional[int]
    light_seconds: typing.Optional[int]
    in_bed_seconds: typing.Optional[int]
    time_to_fall_asleep_seconds: typing.Optional[int]
    no_data_seconds: typing.Optional[int]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
