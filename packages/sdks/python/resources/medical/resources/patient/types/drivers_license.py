# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ......core.datetime_utils import serialize_datetime
from .....commons.types.us_state import UsState
from .period import Period


class DriversLicense(pydantic.BaseModel):
    state: UsState = pydantic.Field(
        description="The 2 letter state acronym where this ID was issued, for example `CA`."
    )
    value: str = pydantic.Field(description="The ID number.")
    assigner: typing.Optional[str]
    period: typing.Optional[Period]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
