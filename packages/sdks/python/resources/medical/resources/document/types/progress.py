# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ......core.datetime_utils import serialize_datetime
from .document_query_status import DocumentQueryStatus


class Progress(pydantic.BaseModel):
    status: DocumentQueryStatus = pydantic.Field(description="The status of querying document references across HIEs.")
    total: typing.Optional[int] = pydantic.Field(description="The total number of documents to be queried.")
    successful: typing.Optional[int] = pydantic.Field(description="The number of documents successfully downloaded.")
    errors: typing.Optional[int] = pydantic.Field(description="The number of documents that failed to download.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
