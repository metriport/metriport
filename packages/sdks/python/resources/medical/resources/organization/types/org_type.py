# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class OrgType(str, enum.Enum):
    ACUTE_CARE = "acuteCare"
    AMBULATORY = "ambulatory"
    HOSPITAL = "hospital"
    LAB_SYSTEMS = "labSystems"
    PHARMACY = "pharmacy"
    POST_ACUTE_CARE = "postAcuteCare"

    def visit(
        self,
        acute_care: typing.Callable[[], T_Result],
        ambulatory: typing.Callable[[], T_Result],
        hospital: typing.Callable[[], T_Result],
        lab_systems: typing.Callable[[], T_Result],
        pharmacy: typing.Callable[[], T_Result],
        post_acute_care: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is OrgType.ACUTE_CARE:
            return acute_care()
        if self is OrgType.AMBULATORY:
            return ambulatory()
        if self is OrgType.HOSPITAL:
            return hospital()
        if self is OrgType.LAB_SYSTEMS:
            return lab_systems()
        if self is OrgType.PHARMACY:
            return pharmacy()
        if self is OrgType.POST_ACUTE_CARE:
            return post_acute_care()
