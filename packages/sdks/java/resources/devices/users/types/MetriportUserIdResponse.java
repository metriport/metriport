/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.devices.users.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(
    builder = MetriportUserIdResponse.Builder.class
)
public final class MetriportUserIdResponse {
  private final String userId;

  private MetriportUserIdResponse(String userId) {
    this.userId = userId;
  }

  /**
   * @return The Metriport user ID to be used in subsequent requests for this user.
   */
  @JsonProperty("userId")
  public String getUserId() {
    return userId;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof MetriportUserIdResponse && equalTo((MetriportUserIdResponse) other);
  }

  private boolean equalTo(MetriportUserIdResponse other) {
    return userId.equals(other.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.userId);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static UserIdStage builder() {
    return new Builder();
  }

  public interface UserIdStage {
    _FinalStage userId(String userId);

    Builder from(MetriportUserIdResponse other);
  }

  public interface _FinalStage {
    MetriportUserIdResponse build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements UserIdStage, _FinalStage {
    private String userId;

    private Builder() {
    }

    @Override
    public Builder from(MetriportUserIdResponse other) {
      userId(other.getUserId());
      return this;
    }

    /**
     * <p>The Metriport user ID to be used in subsequent requests for this user.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    @JsonSetter("userId")
    public _FinalStage userId(String userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public MetriportUserIdResponse build() {
      return new MetriportUserIdResponse(userId);
    }
  }
}
