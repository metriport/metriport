/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.devices.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(
    builder = User.Builder.class
)
public final class User implements IMetriportData {
  private final Metadata metadata;

  private final Optional<Integer> age;

  private final Optional<String> firstName;

  private final Optional<String> lastName;

  private final Optional<String> city;

  private final Optional<String> country;

  private final Optional<String> dateOfBirth;

  private final Optional<String> email;

  private final Optional<String> region;

  private final Optional<Sex> sex;

  private User(Metadata metadata, Optional<Integer> age, Optional<String> firstName,
      Optional<String> lastName, Optional<String> city, Optional<String> country,
      Optional<String> dateOfBirth, Optional<String> email, Optional<String> region,
      Optional<Sex> sex) {
    this.metadata = metadata;
    this.age = age;
    this.firstName = firstName;
    this.lastName = lastName;
    this.city = city;
    this.country = country;
    this.dateOfBirth = dateOfBirth;
    this.email = email;
    this.region = region;
    this.sex = sex;
  }

  @JsonProperty("metadata")
  @Override
  public Metadata getMetadata() {
    return metadata;
  }

  @JsonProperty("age")
  public Optional<Integer> getAge() {
    return age;
  }

  @JsonProperty("first_name")
  public Optional<String> getFirstName() {
    return firstName;
  }

  @JsonProperty("last_name")
  public Optional<String> getLastName() {
    return lastName;
  }

  @JsonProperty("city")
  public Optional<String> getCity() {
    return city;
  }

  @JsonProperty("country")
  public Optional<String> getCountry() {
    return country;
  }

  @JsonProperty("date_of_birth")
  public Optional<String> getDateOfBirth() {
    return dateOfBirth;
  }

  @JsonProperty("email")
  public Optional<String> getEmail() {
    return email;
  }

  /**
   * @return can be state, province, etc
   */
  @JsonProperty("region")
  public Optional<String> getRegion() {
    return region;
  }

  @JsonProperty("sex")
  public Optional<Sex> getSex() {
    return sex;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof User && equalTo((User) other);
  }

  private boolean equalTo(User other) {
    return metadata.equals(other.metadata) && age.equals(other.age) && firstName.equals(other.firstName) && lastName.equals(other.lastName) && city.equals(other.city) && country.equals(other.country) && dateOfBirth.equals(other.dateOfBirth) && email.equals(other.email) && region.equals(other.region) && sex.equals(other.sex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.metadata, this.age, this.firstName, this.lastName, this.city, this.country, this.dateOfBirth, this.email, this.region, this.sex);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static MetadataStage builder() {
    return new Builder();
  }

  public interface MetadataStage {
    _FinalStage metadata(Metadata metadata);

    Builder from(User other);
  }

  public interface _FinalStage {
    User build();

    _FinalStage age(Optional<Integer> age);

    _FinalStage age(Integer age);

    _FinalStage firstName(Optional<String> firstName);

    _FinalStage firstName(String firstName);

    _FinalStage lastName(Optional<String> lastName);

    _FinalStage lastName(String lastName);

    _FinalStage city(Optional<String> city);

    _FinalStage city(String city);

    _FinalStage country(Optional<String> country);

    _FinalStage country(String country);

    _FinalStage dateOfBirth(Optional<String> dateOfBirth);

    _FinalStage dateOfBirth(String dateOfBirth);

    _FinalStage email(Optional<String> email);

    _FinalStage email(String email);

    _FinalStage region(Optional<String> region);

    _FinalStage region(String region);

    _FinalStage sex(Optional<Sex> sex);

    _FinalStage sex(Sex sex);
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements MetadataStage, _FinalStage {
    private Metadata metadata;

    private Optional<Sex> sex = Optional.empty();

    private Optional<String> region = Optional.empty();

    private Optional<String> email = Optional.empty();

    private Optional<String> dateOfBirth = Optional.empty();

    private Optional<String> country = Optional.empty();

    private Optional<String> city = Optional.empty();

    private Optional<String> lastName = Optional.empty();

    private Optional<String> firstName = Optional.empty();

    private Optional<Integer> age = Optional.empty();

    private Builder() {
    }

    @Override
    public Builder from(User other) {
      metadata(other.getMetadata());
      age(other.getAge());
      firstName(other.getFirstName());
      lastName(other.getLastName());
      city(other.getCity());
      country(other.getCountry());
      dateOfBirth(other.getDateOfBirth());
      email(other.getEmail());
      region(other.getRegion());
      sex(other.getSex());
      return this;
    }

    @Override
    @JsonSetter("metadata")
    public _FinalStage metadata(Metadata metadata) {
      this.metadata = metadata;
      return this;
    }

    @Override
    public _FinalStage sex(Sex sex) {
      this.sex = Optional.of(sex);
      return this;
    }

    @Override
    @JsonSetter(
        value = "sex",
        nulls = Nulls.SKIP
    )
    public _FinalStage sex(Optional<Sex> sex) {
      this.sex = sex;
      return this;
    }

    /**
     * <p>can be state, province, etc</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    public _FinalStage region(String region) {
      this.region = Optional.of(region);
      return this;
    }

    @Override
    @JsonSetter(
        value = "region",
        nulls = Nulls.SKIP
    )
    public _FinalStage region(Optional<String> region) {
      this.region = region;
      return this;
    }

    @Override
    public _FinalStage email(String email) {
      this.email = Optional.of(email);
      return this;
    }

    @Override
    @JsonSetter(
        value = "email",
        nulls = Nulls.SKIP
    )
    public _FinalStage email(Optional<String> email) {
      this.email = email;
      return this;
    }

    @Override
    public _FinalStage dateOfBirth(String dateOfBirth) {
      this.dateOfBirth = Optional.of(dateOfBirth);
      return this;
    }

    @Override
    @JsonSetter(
        value = "date_of_birth",
        nulls = Nulls.SKIP
    )
    public _FinalStage dateOfBirth(Optional<String> dateOfBirth) {
      this.dateOfBirth = dateOfBirth;
      return this;
    }

    @Override
    public _FinalStage country(String country) {
      this.country = Optional.of(country);
      return this;
    }

    @Override
    @JsonSetter(
        value = "country",
        nulls = Nulls.SKIP
    )
    public _FinalStage country(Optional<String> country) {
      this.country = country;
      return this;
    }

    @Override
    public _FinalStage city(String city) {
      this.city = Optional.of(city);
      return this;
    }

    @Override
    @JsonSetter(
        value = "city",
        nulls = Nulls.SKIP
    )
    public _FinalStage city(Optional<String> city) {
      this.city = city;
      return this;
    }

    @Override
    public _FinalStage lastName(String lastName) {
      this.lastName = Optional.of(lastName);
      return this;
    }

    @Override
    @JsonSetter(
        value = "last_name",
        nulls = Nulls.SKIP
    )
    public _FinalStage lastName(Optional<String> lastName) {
      this.lastName = lastName;
      return this;
    }

    @Override
    public _FinalStage firstName(String firstName) {
      this.firstName = Optional.of(firstName);
      return this;
    }

    @Override
    @JsonSetter(
        value = "first_name",
        nulls = Nulls.SKIP
    )
    public _FinalStage firstName(Optional<String> firstName) {
      this.firstName = firstName;
      return this;
    }

    @Override
    public _FinalStage age(Integer age) {
      this.age = Optional.of(age);
      return this;
    }

    @Override
    @JsonSetter(
        value = "age",
        nulls = Nulls.SKIP
    )
    public _FinalStage age(Optional<Integer> age) {
      this.age = age;
      return this;
    }

    @Override
    public User build() {
      return new User(metadata, age, firstName, lastName, city, country, dateOfBirth, email, region, sex);
    }
  }
}
