/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.devices.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(
    builder = MetriportData.Builder.class
)
public final class MetriportData implements IMetriportData {
  private final Metadata metadata;

  private MetriportData(Metadata metadata) {
    this.metadata = metadata;
  }

  @JsonProperty("metadata")
  @Override
  public Metadata getMetadata() {
    return metadata;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof MetriportData && equalTo((MetriportData) other);
  }

  private boolean equalTo(MetriportData other) {
    return metadata.equals(other.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.metadata);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static MetadataStage builder() {
    return new Builder();
  }

  public interface MetadataStage {
    _FinalStage metadata(Metadata metadata);

    Builder from(MetriportData other);
  }

  public interface _FinalStage {
    MetriportData build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements MetadataStage, _FinalStage {
    private Metadata metadata;

    private Builder() {
    }

    @Override
    public Builder from(MetriportData other) {
      metadata(other.getMetadata());
      return this;
    }

    @Override
    @JsonSetter("metadata")
    public _FinalStage metadata(Metadata metadata) {
      this.metadata = metadata;
      return this;
    }

    @Override
    public MetriportData build() {
      return new MetriportData(metadata);
    }
  }
}
