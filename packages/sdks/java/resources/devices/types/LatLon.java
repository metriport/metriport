/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.devices.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(
    builder = LatLon.Builder.class
)
public final class LatLon {
  private final double lat;

  private final double lon;

  private LatLon(double lat, double lon) {
    this.lat = lat;
    this.lon = lon;
  }

  @JsonProperty("lat")
  public double getLat() {
    return lat;
  }

  @JsonProperty("lon")
  public double getLon() {
    return lon;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof LatLon && equalTo((LatLon) other);
  }

  private boolean equalTo(LatLon other) {
    return lat == other.lat && lon == other.lon;
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.lat, this.lon);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static LatStage builder() {
    return new Builder();
  }

  public interface LatStage {
    LonStage lat(double lat);

    Builder from(LatLon other);
  }

  public interface LonStage {
    _FinalStage lon(double lon);
  }

  public interface _FinalStage {
    LatLon build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements LatStage, LonStage, _FinalStage {
    private double lat;

    private double lon;

    private Builder() {
    }

    @Override
    public Builder from(LatLon other) {
      lat(other.getLat());
      lon(other.getLon());
      return this;
    }

    @Override
    @JsonSetter("lat")
    public LonStage lat(double lat) {
      this.lat = lat;
      return this;
    }

    @Override
    @JsonSetter("lon")
    public _FinalStage lon(double lon) {
      this.lon = lon;
      return this;
    }

    @Override
    public LatLon build() {
      return new LatLon(lat, lon);
    }
  }
}
