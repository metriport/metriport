/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.devices.connect.requests;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(
    builder = ConnectRpmProviderRequest.Builder.class
)
public final class ConnectRpmProviderRequest {
  private final String token;

  private final String deviceUserId;

  private final String deviceIds;

  private ConnectRpmProviderRequest(String token, String deviceUserId, String deviceIds) {
    this.token = token;
    this.deviceUserId = deviceUserId;
    this.deviceIds = deviceIds;
  }

  /**
   * @return The user ID you identify this user with in your app.
   */
  @JsonProperty("token")
  public String getToken() {
    return token;
  }

  /**
   * @return The provider’s user ID for which the RPM device(s) are provisioned.
   */
  @JsonProperty("deviceUserId")
  public String getDeviceUserId() {
    return deviceUserId;
  }

  /**
   * @return A comma-separated string of the user’s devices IDs to connect to. For example: <code>1234-0001,5678-0002</code>.
   */
  @JsonProperty("deviceIds")
  public String getDeviceIds() {
    return deviceIds;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof ConnectRpmProviderRequest && equalTo((ConnectRpmProviderRequest) other);
  }

  private boolean equalTo(ConnectRpmProviderRequest other) {
    return token.equals(other.token) && deviceUserId.equals(other.deviceUserId) && deviceIds.equals(other.deviceIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.token, this.deviceUserId, this.deviceIds);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static TokenStage builder() {
    return new Builder();
  }

  public interface TokenStage {
    DeviceUserIdStage token(String token);

    Builder from(ConnectRpmProviderRequest other);
  }

  public interface DeviceUserIdStage {
    DeviceIdsStage deviceUserId(String deviceUserId);
  }

  public interface DeviceIdsStage {
    _FinalStage deviceIds(String deviceIds);
  }

  public interface _FinalStage {
    ConnectRpmProviderRequest build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements TokenStage, DeviceUserIdStage, DeviceIdsStage, _FinalStage {
    private String token;

    private String deviceUserId;

    private String deviceIds;

    private Builder() {
    }

    @Override
    public Builder from(ConnectRpmProviderRequest other) {
      token(other.getToken());
      deviceUserId(other.getDeviceUserId());
      deviceIds(other.getDeviceIds());
      return this;
    }

    /**
     * <p>The user ID you identify this user with in your app.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    @JsonSetter("token")
    public DeviceUserIdStage token(String token) {
      this.token = token;
      return this;
    }

    /**
     * <p>The provider’s user ID for which the RPM device(s) are provisioned.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    @JsonSetter("deviceUserId")
    public DeviceIdsStage deviceUserId(String deviceUserId) {
      this.deviceUserId = deviceUserId;
      return this;
    }

    /**
     * <p>A comma-separated string of the user’s devices IDs to connect to. For example: <code>1234-0001,5678-0002</code>.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    @JsonSetter("deviceIds")
    public _FinalStage deviceIds(String deviceIds) {
      this.deviceIds = deviceIds;
      return this;
    }

    @Override
    public ConnectRpmProviderRequest build() {
      return new ConnectRpmProviderRequest(token, deviceUserId, deviceIds);
    }
  }
}
