/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.devices.connect;

import core.ApiError;
import core.ClientOptions;
import core.ObjectMappers;
import core.RequestOptions;
import java.io.IOException;
import java.lang.Object;
import java.lang.RuntimeException;
import java.lang.String;
import okhttp3.Headers;
import okhttp3.HttpUrl;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import resources.devices.connect.requests.ConnectRpmProviderRequest;

public class ConnectClient {
  protected final ClientOptions clientOptions;

  public ConnectClient(ClientOptions clientOptions) {
    this.clientOptions = clientOptions;
  }

  /**
   * Connects the user to remote patient monitoring (RPM) device(s) for the specified provider.
   */
  public void connectRpmProvider(String provider, ConnectRpmProviderRequest request,
      RequestOptions requestOptions) {
    HttpUrl.Builder httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()
      .addPathSegments("connect")
      .addPathSegments("rpm")
      .addPathSegment(provider);httpUrl.addQueryParameter("token", request.getToken());
      httpUrl.addQueryParameter("deviceUserId", request.getDeviceUserId());
      httpUrl.addQueryParameter("deviceIds", request.getDeviceIds());
      Request.Builder _requestBuilder = new Request.Builder()
        .url(httpUrl.build())
        .method("POST", RequestBody.create("", null))
        .headers(Headers.of(clientOptions.headers(requestOptions)));
      Request okhttpRequest = _requestBuilder.build();
      try {
        Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
        if (response.isSuccessful()) {
          return;
        }
        throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
      }
      catch (IOException e) {
        throw new RuntimeException(e);
      }
    }

    /**
     * Connects the user to remote patient monitoring (RPM) device(s) for the specified provider.
     */
    public void connectRpmProvider(String provider, ConnectRpmProviderRequest request) {
      connectRpmProvider(provider,request,null);
    }
  }
