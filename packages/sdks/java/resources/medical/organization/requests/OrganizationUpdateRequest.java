/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.medical.organization.requests;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import resources.commons.types.Address;
import resources.medical.organization.types.OrgType;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(
    builder = OrganizationUpdateRequest.Builder.class
)
public final class OrganizationUpdateRequest {
  private final Optional<String> eTag;

  private final String name;

  private final OrgType type;

  private final Address location;

  private OrganizationUpdateRequest(Optional<String> eTag, String name, OrgType type,
      Address location) {
    this.eTag = eTag;
    this.name = name;
    this.type = type;
    this.location = location;
  }

  @JsonProperty("ETag")
  public Optional<String> getETag() {
    return eTag;
  }

  /**
   * @return The name of your organization.
   * This is usually your legal corporate entity name -
   * for example <code>Metriport Inc.</code>.
   */
  @JsonProperty("name")
  public String getName() {
    return name;
  }

  /**
   * @return The type of your organization.
   */
  @JsonProperty("type")
  public OrgType getType() {
    return type;
  }

  @JsonProperty("location")
  public Address getLocation() {
    return location;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof OrganizationUpdateRequest && equalTo((OrganizationUpdateRequest) other);
  }

  private boolean equalTo(OrganizationUpdateRequest other) {
    return eTag.equals(other.eTag) && name.equals(other.name) && type.equals(other.type) && location.equals(other.location);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.eTag, this.name, this.type, this.location);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static NameStage builder() {
    return new Builder();
  }

  public interface NameStage {
    TypeStage name(String name);

    Builder from(OrganizationUpdateRequest other);
  }

  public interface TypeStage {
    LocationStage type(OrgType type);
  }

  public interface LocationStage {
    _FinalStage location(Address location);
  }

  public interface _FinalStage {
    OrganizationUpdateRequest build();

    _FinalStage eTag(Optional<String> eTag);

    _FinalStage eTag(String eTag);
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements NameStage, TypeStage, LocationStage, _FinalStage {
    private String name;

    private OrgType type;

    private Address location;

    private Optional<String> eTag = Optional.empty();

    private Builder() {
    }

    @Override
    public Builder from(OrganizationUpdateRequest other) {
      eTag(other.getETag());
      name(other.getName());
      type(other.getType());
      location(other.getLocation());
      return this;
    }

    /**
     * <p>The name of your organization.
     * This is usually your legal corporate entity name -
     * for example <code>Metriport Inc.</code>.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    @JsonSetter("name")
    public TypeStage name(String name) {
      this.name = name;
      return this;
    }

    /**
     * <p>The type of your organization.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    @JsonSetter("type")
    public LocationStage type(OrgType type) {
      this.type = type;
      return this;
    }

    @Override
    @JsonSetter("location")
    public _FinalStage location(Address location) {
      this.location = location;
      return this;
    }

    @Override
    public _FinalStage eTag(String eTag) {
      this.eTag = Optional.of(eTag);
      return this;
    }

    @Override
    @JsonSetter(
        value = "ETag",
        nulls = Nulls.SKIP
    )
    public _FinalStage eTag(Optional<String> eTag) {
      this.eTag = eTag;
      return this;
    }

    @Override
    public OrganizationUpdateRequest build() {
      return new OrganizationUpdateRequest(eTag, name, type, location);
    }
  }
}
