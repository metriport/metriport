/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.medical.document.requests;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(
    builder = StartDocumentQueryRequest.Builder.class
)
public final class StartDocumentQueryRequest {
  private final String patientId;

  private final String facilityId;

  private StartDocumentQueryRequest(String patientId, String facilityId) {
    this.patientId = patientId;
    this.facilityId = facilityId;
  }

  /**
   * @return The ID of the Patient for which to list available Documents.
   */
  @JsonProperty("patientId")
  public String getPatientId() {
    return patientId;
  }

  /**
   * @return The ID of the Facility where the patient is receiving care.
   */
  @JsonProperty("facilityId")
  public String getFacilityId() {
    return facilityId;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof StartDocumentQueryRequest && equalTo((StartDocumentQueryRequest) other);
  }

  private boolean equalTo(StartDocumentQueryRequest other) {
    return patientId.equals(other.patientId) && facilityId.equals(other.facilityId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.patientId, this.facilityId);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static PatientIdStage builder() {
    return new Builder();
  }

  public interface PatientIdStage {
    FacilityIdStage patientId(String patientId);

    Builder from(StartDocumentQueryRequest other);
  }

  public interface FacilityIdStage {
    _FinalStage facilityId(String facilityId);
  }

  public interface _FinalStage {
    StartDocumentQueryRequest build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements PatientIdStage, FacilityIdStage, _FinalStage {
    private String patientId;

    private String facilityId;

    private Builder() {
    }

    @Override
    public Builder from(StartDocumentQueryRequest other) {
      patientId(other.getPatientId());
      facilityId(other.getFacilityId());
      return this;
    }

    /**
     * <p>The ID of the Patient for which to list available Documents.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    @JsonSetter("patientId")
    public FacilityIdStage patientId(String patientId) {
      this.patientId = patientId;
      return this;
    }

    /**
     * <p>The ID of the Facility where the patient is receiving care.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @Override
    @JsonSetter("facilityId")
    public _FinalStage facilityId(String facilityId) {
      this.facilityId = facilityId;
      return this;
    }

    @Override
    public StartDocumentQueryRequest build() {
      return new StartDocumentQueryRequest(patientId, facilityId);
    }
  }
}
