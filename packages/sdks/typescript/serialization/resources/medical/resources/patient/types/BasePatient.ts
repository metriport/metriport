/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Metriport from "../../../../../../api";
import * as core from "../../../../../../core";

export const BasePatient: core.serialization.ObjectSchema<
    serializers.medical.BasePatient.Raw,
    Metriport.medical.BasePatient
> = core.serialization.object({
    firstName: core.serialization.string(),
    lastName: core.serialization.string(),
    dob: core.serialization.string(),
    genderAtBirth: core.serialization.string(),
    personalIdentifiers: core.serialization
        .list(core.serialization.lazy(async () => (await import("../../../../..")).medical.PersonalIdentifier))
        .optional(),
    address: core.serialization.lazy(async () => (await import("../../../../..")).medical.Addresses).optional(),
    contact: core.serialization.lazy(async () => (await import("../../../../..")).medical.Contacts).optional(),
});

export declare namespace BasePatient {
    interface Raw {
        firstName: string;
        lastName: string;
        dob: string;
        genderAtBirth: string;
        personalIdentifiers?: serializers.medical.PersonalIdentifier.Raw[] | null;
        address?: serializers.medical.Addresses.Raw | null;
        contact?: serializers.medical.Contacts.Raw | null;
    }
}
