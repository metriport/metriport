/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Metriport from "../../../../../../api";
import * as core from "../../../../../../core";

export const ConsolidatedCountResponse: core.serialization.ObjectSchema<
    serializers.medical.ConsolidatedCountResponse.Raw,
    Metriport.medical.ConsolidatedCountResponse
> = core.serialization.object({
    total: core.serialization.number(),
    resources: core.serialization.record(core.serialization.string(), core.serialization.number()),
    filter: core.serialization.lazyObject(async () => (await import("../../../../..")).medical.Filter),
});

export declare namespace ConsolidatedCountResponse {
    interface Raw {
        total: number;
        resources: Record<string, number>;
        filter: serializers.medical.Filter.Raw;
    }
}
