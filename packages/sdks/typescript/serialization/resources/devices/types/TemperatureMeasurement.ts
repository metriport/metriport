/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const TemperatureMeasurement: core.serialization.ObjectSchema<
    serializers.devices.TemperatureMeasurement.Raw,
    Metriport.devices.TemperatureMeasurement
> = core.serialization.object({
    avgCelcius: core.serialization.property("avg_celcius", core.serialization.number().optional()),
    samplesCelcius: core.serialization.property(
        "samples_celcius",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).devices.Sample))
            .optional()
    ),
});

export declare namespace TemperatureMeasurement {
    interface Raw {
        avg_celcius?: number | null;
        samples_celcius?: serializers.devices.Sample.Raw[] | null;
    }
}
