/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const Metadata: core.serialization.ObjectSchema<serializers.devices.Metadata.Raw, Metriport.devices.Metadata> =
    core.serialization.object({
        date: core.serialization.string(),
        hour: core.serialization.string().optional(),
        source: core.serialization.lazy(async () => (await import("../../..")).devices.ProviderSource),
        dataSource: core.serialization.property(
            "data_source",
            core.serialization.lazyObject(async () => (await import("../../..")).devices.SourceInfo).optional()
        ),
        error: core.serialization.string().optional(),
    });

export declare namespace Metadata {
    interface Raw {
        date: string;
        hour?: string | null;
        source: serializers.devices.ProviderSource.Raw;
        data_source?: serializers.devices.SourceInfo.Raw | null;
        error?: string | null;
    }
}
