/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const ActivityMovement: core.serialization.ObjectSchema<
    serializers.devices.ActivityMovement.Raw,
    Metriport.devices.ActivityMovement
> = core.serialization.object({
    stepsCount: core.serialization.property("steps_count", core.serialization.number().optional()),
    floorsCount: core.serialization.property("floors_count", core.serialization.number().optional()),
    elevation: core.serialization.lazyObject(async () => (await import("../../..")).devices.Elevation).optional(),
    speed: core.serialization.lazyObject(async () => (await import("../../..")).devices.Speed).optional(),
    avgCadence: core.serialization.property("avg_cadence", core.serialization.number().optional()),
    distanceMeters: core.serialization.property("distance_meters", core.serialization.number().optional()),
});

export declare namespace ActivityMovement {
    interface Raw {
        steps_count?: number | null;
        floors_count?: number | null;
        elevation?: serializers.devices.Elevation.Raw | null;
        speed?: serializers.devices.Speed.Raw | null;
        avg_cadence?: number | null;
        distance_meters?: number | null;
    }
}
