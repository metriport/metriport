/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const Temperature: core.serialization.ObjectSchema<
    serializers.devices.Temperature.Raw,
    Metriport.devices.Temperature
> = core.serialization.object({
    core: core.serialization
        .lazyObject(async () => (await import("../../..")).devices.TemperatureMeasurement)
        .optional(),
    deltaCelcius: core.serialization.property("delta_celcius", core.serialization.number().optional()),
    skin: core.serialization
        .lazyObject(async () => (await import("../../..")).devices.TemperatureMeasurement)
        .optional(),
});

export declare namespace Temperature {
    interface Raw {
        core?: serializers.devices.TemperatureMeasurement.Raw | null;
        delta_celcius?: number | null;
        skin?: serializers.devices.TemperatureMeasurement.Raw | null;
    }
}
