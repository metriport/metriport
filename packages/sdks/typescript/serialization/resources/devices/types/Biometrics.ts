/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const Biometrics: core.serialization.ObjectSchema<
    serializers.devices.Biometrics.Raw,
    Metriport.devices.Biometrics
> = core.serialization.object({
    heartRate: core.serialization.property(
        "heart_rate",
        core.serialization.lazyObject(async () => (await import("../../..")).devices.HeartRate).optional()
    ),
    hrv: core.serialization.lazyObject(async () => (await import("../../..")).devices.HeartRateVariability).optional(),
    respiration: core.serialization.lazyObject(async () => (await import("../../..")).devices.Respiration).optional(),
});

export declare namespace Biometrics {
    interface Raw {
        heart_rate?: serializers.devices.HeartRate.Raw | null;
        hrv?: serializers.devices.HeartRateVariability.Raw | null;
        respiration?: serializers.devices.Respiration.Raw | null;
    }
}
