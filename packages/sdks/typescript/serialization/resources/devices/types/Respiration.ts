/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const Respiration: core.serialization.ObjectSchema<
    serializers.devices.Respiration.Raw,
    Metriport.devices.Respiration
> = core.serialization.object({
    vo2Max: core.serialization.property("vo2_max", core.serialization.number().optional()),
    spo2: core.serialization.lazyObject(async () => (await import("../../..")).devices.BloodOxygen).optional(),
    avgBreathsPerMinute: core.serialization.property("avg_breaths_per_minute", core.serialization.number().optional()),
    peakFlowLMin: core.serialization.property("peak_flow_L_min", core.serialization.number().optional()),
    forcedVolumeL: core.serialization.property("forced_volume_L", core.serialization.number().optional()),
    samplesBreathsPerMinute: core.serialization.property(
        "samples_breaths_per_minute",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).devices.Sample))
            .optional()
    ),
});

export declare namespace Respiration {
    interface Raw {
        vo2_max?: number | null;
        spo2?: serializers.devices.BloodOxygen.Raw | null;
        avg_breaths_per_minute?: number | null;
        peak_flow_L_min?: number | null;
        forced_volume_L?: number | null;
        samples_breaths_per_minute?: serializers.devices.Sample.Raw[] | null;
    }
}
