/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const Activity: core.serialization.ObjectSchema<serializers.devices.Activity.Raw, Metriport.devices.Activity> =
    core.serialization
        .object({
            summary: core.serialization
                .lazyObject(async () => (await import("../../..")).devices.ActivitySummary)
                .optional(),
            activityLogs: core.serialization.property(
                "activity_logs",
                core.serialization
                    .list(core.serialization.lazyObject(async () => (await import("../../..")).devices.ActivityLog))
                    .optional()
            ),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).devices.MetriportData));

export declare namespace Activity {
    interface Raw extends serializers.devices.MetriportData.Raw {
        summary?: serializers.devices.ActivitySummary.Raw | null;
        activity_logs?: serializers.devices.ActivityLog.Raw[] | null;
    }
}
