/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const HeartRate: core.serialization.ObjectSchema<
    serializers.devices.HeartRate.Raw,
    Metriport.devices.HeartRate
> = core.serialization.object({
    minBpm: core.serialization.property("min_bpm", core.serialization.number().optional()),
    maxBpm: core.serialization.property("max_bpm", core.serialization.number().optional()),
    avgBpm: core.serialization.property("avg_bpm", core.serialization.number().optional()),
    restingBpm: core.serialization.property("resting_bpm", core.serialization.number().optional()),
    samplesBpm: core.serialization.property(
        "samples_bpm",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).devices.Sample))
            .optional()
    ),
});

export declare namespace HeartRate {
    interface Raw {
        min_bpm?: number | null;
        max_bpm?: number | null;
        avg_bpm?: number | null;
        resting_bpm?: number | null;
        samples_bpm?: serializers.devices.Sample.Raw[] | null;
    }
}
