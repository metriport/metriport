/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const SourceInfo: core.serialization.ObjectSchema<
    serializers.devices.SourceInfo.Raw,
    Metriport.devices.SourceInfo
> = core.serialization.object({
    sourceType: core.serialization.property(
        "source_type",
        core.serialization.lazy(async () => (await import("../../..")).devices.SourceType).optional()
    ),
    id: core.serialization.string().optional(),
    name: core.serialization.string().optional(),
    type: core.serialization.string().optional(),
});

export declare namespace SourceInfo {
    interface Raw {
        source_type?: serializers.devices.SourceType.Raw | null;
        id?: string | null;
        name?: string | null;
        type?: string | null;
    }
}
