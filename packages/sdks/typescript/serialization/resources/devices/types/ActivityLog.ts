/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Metriport from "../../../../api";
import * as core from "../../../../core";

export const ActivityLog: core.serialization.ObjectSchema<
    serializers.devices.ActivityLog.Raw,
    Metriport.devices.ActivityLog
> = core.serialization.object({
    metadata: core.serialization.lazyObject(async () => (await import("../../..")).devices.Metadata),
    name: core.serialization.string().optional(),
    type: core.serialization.string().optional(),
    startTime: core.serialization.property("start_time", core.serialization.string().optional()),
    endTime: core.serialization.property("end_time", core.serialization.string().optional()),
    durations: core.serialization
        .lazyObject(async () => (await import("../../..")).devices.ActivityDurations)
        .optional(),
    energyExpenditure: core.serialization.property(
        "energy_expenditure",
        core.serialization.lazyObject(async () => (await import("../../..")).devices.EnergyExpenditure).optional()
    ),
    movement: core.serialization.lazyObject(async () => (await import("../../..")).devices.ActivityMovement).optional(),
    location: core.serialization.lazyObject(async () => (await import("../../..")).devices.Location).optional(),
    biometrics: core.serialization.lazyObject(async () => (await import("../../..")).devices.Biometrics).optional(),
});

export declare namespace ActivityLog {
    interface Raw {
        metadata: serializers.devices.Metadata.Raw;
        name?: string | null;
        type?: string | null;
        start_time?: string | null;
        end_time?: string | null;
        durations?: serializers.devices.ActivityDurations.Raw | null;
        energy_expenditure?: serializers.devices.EnergyExpenditure.Raw | null;
        movement?: serializers.devices.ActivityMovement.Raw | null;
        location?: serializers.devices.Location.Raw | null;
        biometrics?: serializers.devices.Biometrics.Raw | null;
    }
}
