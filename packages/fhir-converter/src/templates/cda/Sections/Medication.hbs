{{!-- 
  // ------------------------------------------------------------------------------------------------- 
  // Copyright (c) 2022-present Metriport Inc.   
  //  
  // Licensed under AGPLv3. See LICENSE in the repo root for license information.
  //  
  // This file incorporates work covered by the following copyright and  
  // permission notice:  
  //  
  //     Copyright (c) Microsoft Corporation. All rights reserved. 
  //  
  //     Permission to use, copy, modify, and/or distribute this software  
  //     for any purpose with or without fee is hereby granted, provided  
  //     that the above copyright notice and this permission notice appear  
  //     in all copies.  
  //  
  //     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL  
  //     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED  
  //     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE  
  //     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR  
  //     CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS  
  //     OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,  
  //     NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN  
  //     CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  
  // -------------------------------------------------------------------------------------------------
--}}
{{#if (contains (toString (toJsonString msg)) '2.16.840.1.113883.10.20.22.2.1' '2.16.840.1.113883.10.20.22.2.38')}}
    {{#with (getAllCdaSectionsByTemplateId msg '2.16.840.1.113883.10.20.22.2.1.1' '2.16.840.1.113883.10.20.22.2.1' '2.16.840.1.113883.10.20.22.2.38') as |medEntries|}}
        {{#each medEntries}}
            {{#each (multipleToArray 2_16_840_1_113883_10_20_22_2_1_1.entry 2_16_840_1_113883_10_20_22_2_1.entry 2_16_840_1_113883_10_20_22_2_38.entry) as |medEntry|}}
                {{#if medEntry.substanceAdministration}}
                    {{#if medEntry.substanceAdministration.consumable.manufacturedProduct.manufacturedMaterial}}
                        {{>Resources/Medication.hbs medication=medEntry.substanceAdministration.consumable.manufacturedProduct.manufacturedMaterial ID=(generateUUID (toJsonString medEntry.substanceAdministration.consumable.manufacturedProduct.manufacturedMaterial))}},
                        
                        {{>Resources/MedicationStatement.hbs medicationStatement=medEntry.substanceAdministration ID=(generateUUID (toJsonString medEntry.substanceAdministration))}},
                        {{#with (evaluate 'Utils/GeneratePatientId.hbs' obj=@metriportPatientId) as |patientId|}}
                            {{>References/MedicationStatement/subject.hbs ID=(generateUUID (toJsonString medEntry.substanceAdministration)) REF=(concat 'Patient/' patientId.Id)}},
                        {{/with}}
                        
                        {{>References/MedicationStatement/medicationReference.hbs ID=(generateUUID (toJsonString medEntry.substanceAdministration)) REF=(concat 'Medication/' (generateUUID (toJsonString medEntry.substanceAdministration.consumable.manufacturedProduct.manufacturedMaterial)))}},
                        {{#each (toArray medEntry.substanceAdministration.entryRelationship) as |medReq|}}
                            {{#if medReq.supply}}
                                {{>Resources/MedicationRequest.hbs medicationRequest=medReq.supply ID=(generateUUID (toJsonString medReq.supply))}},
                                {{#with (evaluate 'Utils/GeneratePatientId.hbs' obj=@metriportPatientId) as |patientId|}}
                                	{{>References/MedicationRequest/subject.hbs ID=(generateUUID (toJsonString medReq.supply)) REF=(concat 'Patient/' patientId.Id)}},
                                {{/with}}
                                {{>References/MedicationRequest/medicationReference.hbs ID=(generateUUID (toJsonString medReq.supply)) REF=(concat 'Medication/' (generateUUID (toJsonString medEntry.substanceAdministration.consumable.manufacturedProduct.manufacturedMaterial)))}},
                            {{/if}}
                            {{!-- I am keeping what was originally here but I have yet to see an author placed here --}}
                            {{#if medReq.supply.author.assignedAuthor}}
                                {{#with (evaluate 'Utils/GeneratePractitionerId.hbs' obj=medReq.supply.author.assignedAuthor) as |practitionerId|}}
                                    {{>Resources/Practitioner.hbs practitioner=medReq.supply.author.assignedAuthor ID=practitionerId.Id}},
                                    {{>References/MedicationRequest/requester.hbs ID=(generateUUID (toJsonString medReq.supply)) REF=(concat 'Practitioner/' practitionerId.Id)}}
                                {{/with}}
                                {{#if medReq.supply.author.assignedAuthor.representedOrganization}}
                                    {{#with (evaluate 'Utils/GenerateOrganizationId.hbs' obj=medReq.supply.author.assignedAuthor.representedOrganization) as |orgId|}}
                                        {{>Resources/Organization.hbs org=medReq.supply.author.assignedAuthor.representedOrganization ID=orgId.Id}},
                                        {{>References/MedicationRequest/requester.hbs ID=(generateUUID (toJsonString medReq.supply)) REF=(concat 'Organization/' orgId.Id)}}
                                    {{/with}}
                                {{/if}}
                            {{else if (and medReq.supply medEntry.substanceAdministration.author.assignedAuthor)}}
                                {{#with (evaluate 'Utils/GeneratePractitionerId.hbs' obj=medEntry.substanceAdministration.author.assignedAuthor) as |practitionerId|}}
                                    {{>Resources/Practitioner.hbs practitioner=medEntry.substanceAdministration.author.assignedAuthor ID=practitionerId.Id}},
                                    {{>References/MedicationRequest/requester.hbs ID=(generateUUID (toJsonString medReq.supply)) REF=(concat 'Practitioner/' practitionerId.Id)}}
                                {{/with}}
                                {{#if medEntry.substanceAdministration.author.assignedAuthor.representedOrganization}}
                                    {{#with (evaluate 'Utils/GenerateOrganizationId.hbs' obj=medEntry.substanceAdministration.author.assignedAuthor.representedOrganization) as |orgId|}}
                                        {{>Resources/Organization.hbs org=medEntry.substanceAdministration.author.assignedAuthor.representedOrganization ID=orgId.Id}},
                                        {{>References/MedicationRequest/requester.hbs ID=(generateUUID (toJsonString medReq.supply)) REF=(concat 'Organization/' orgId.Id)}}
                                    {{/with}}
                                {{/if}}
                            {{/if}}

                        {{/each}}
                    {{/if}}

                    {{#if medEntry.substanceAdministration.informant.assignedEntity.representedOrganization.name._}}
                        {{>Resources/Organization.hbs org=medEntry.substanceAdministration.informant.assignedEntity.representedOrganization ID=(generateUUID (toJsonString medEntry.substanceAdministration.informant.assignedEntity.representedOrganization))}},
                    {{/if}}
                {{/if}}  
            {{/each}}
       {{/each}} 
    {{/with}}
{{/if}}