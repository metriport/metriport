{{!-- 
  // ------------------------------------------------------------------------------------------------- 
  // Copyright (c) 2022-present Metriport Inc.   
  //  
  // Licensed under AGPLv3. See LICENSE in the repo root for license information.
  //  
  // This file incorporates work covered by the following copyright and  
  // permission notice:  
  //  
  //     Copyright (c) Microsoft Corporation. All rights reserved. 
  //  
  //     Permission to use, copy, modify, and/or distribute this software  
  //     for any purpose with or without fee is hereby granted, provided  
  //     that the above copyright notice and this permission notice appear  
  //     in all copies.  
  //  
  //     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL  
  //     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED  
  //     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE  
  //     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR  
  //     CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS  
  //     OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,  
  //     NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN  
  //     CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  
  // -------------------------------------------------------------------------------------------------
--}}
{{!-- 
  Processes author elements for an observation and creates Practitioner/Organization resources 
  with performer references.
  
  Parameters:
  - observation: The observation object containing author elements
  - observationJson: The stringified JSON of the observation for UUID generation
--}}
{{#if (toArray observation.author)}}
    {{#each (toArray observation.author) as |author|}}
        {{#if author.assignedAuthor}}
            {{#with (evaluate 'Utils/GeneratePractitionerId.hbs' obj=author.assignedAuthor) as |practitionerId|}}
                {{>Resources/Practitioner.hbs practitioner=author.assignedAuthor ID=practitionerId.Id}},
                {{>References/Observation/performer.hbs ID=(generateUUID ../observationJson) REF=(concat 'Practitioner/' practitionerId.Id)}},
            {{/with}}
        {{/if}}
        {{#if author.assignedAuthor.representedOrganization}}
            {{#with (evaluate 'Utils/GenerateOrganizationId.hbs' obj=author.assignedAuthor.representedOrganization) as |orgId|}}
                {{>Resources/Organization.hbs org=author.assignedAuthor.representedOrganization ID=orgId.Id}},
                {{>References/Observation/performer.hbs ID=(generateUUID ../observationJson) REF=(concat 'Organization/' orgId.Id)}},
            {{/with}}
        {{/if}}
    {{/each}}
{{/if}}

