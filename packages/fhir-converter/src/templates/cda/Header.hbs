{{!-- 
  // ------------------------------------------------------------------------------------------------- 
  // Copyright (c) 2022-present Metriport Inc.   
  //  
  // Licensed under AGPLv3. See LICENSE in the repo root for license information.
  //  
  // This file incorporates work covered by the following copyright and  
  // permission notice:  
  //  
  //     Copyright (c) Microsoft Corporation. All rights reserved. 
  //  
  //     Permission to use, copy, modify, and/or distribute this software  
  //     for any purpose with or without fee is hereby granted, provided  
  //     that the above copyright notice and this permission notice appear  
  //     in all copies.  
  //  
  //     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL  
  //     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED  
  //     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE  
  //     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR  
  //     CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS  
  //     OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,  
  //     NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN  
  //     CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  
  // -------------------------------------------------------------------------------------------------
--}}
{{#with msg.ClinicalDocument as |document|}}
    {{>Resources/Composition.hbs composition=document ID=(generateUUID (toJsonString document))}},
    {{#with (evaluate 'Utils/GeneratePatientId.hbs' obj=@metriportPatientId) as |patientId|}}
    	{{>References/Composition/subject.hbs ID=(generateUUID (toJsonString document)) REF=(concat 'Patient/' patientId.Id)}},
    {{/with}}

    {{#if document.legalAuthenticator}}
        {{#with (evaluate 'Utils/GeneratePractitionerId.hbs' obj=document.legalAuthenticator.assignedEntity) as |practitionerId|}}
            {{>Resources/Practitioner.hbs practitioner=document.legalAuthenticator.assignedEntity ID=practitionerId.Id}},
        {{/with}}
    {{/if}}

    {{#if document.componentOf.encompassingEncounter}}
        {{!-- do we want to include this? Kinda a duplicate of more rich data later in encounter section --}}
        {{>Resources/Encounter.hbs encounter=document.componentOf.encompassingEncounter ID=@encompassingEncounterIds.newId}},
        {{#with (evaluate 'Utils/GeneratePatientId.hbs' obj=@metriportPatientId) as |patientId|}}
            {{>References/Encounter/subject.hbs ID=@encompassingEncounterIds.newId REF=(concat 'Patient/' patientId.Id)}},
        {{/with}}
        
        {{#if document.componentOf.encompassingEncounter.responsibleParty.assignedEntity}}
            {{#with (evaluate 'Utils/GeneratePractitionerId.hbs' obj=document.componentOf.encompassingEncounter.responsibleParty.assignedEntity) as |practitionerId|}}
                {{>Resources/Practitioner.hbs practitioner=document.componentOf.encompassingEncounter.responsibleParty.assignedEntity ID=practitionerId.Id}},
                {{>References/Encounter/participant.individual.hbs ID=@encompassingEncounterIds.newId REF=(concat 'Practitioner/' practitionerId.Id)}},
            {{/with}}
        {{/if}}

        {{>References/Composition/encounter.hbs ID=(generateUUID (toJsonString document)) REF=(concat 'Encounter/' @encompassingEncounterIds.newId)}},
        {{#with (evaluate 'Utils/GenerateLocationId.hbs' location=document.componentOf.encompassingEncounter.location.healthCareFacility) as |locationId|}}
            {{>Resources/LocationForHeader.hbs location=document.componentOf.encompassingEncounter.location.healthCareFacility ID=locationId.Id}},
            {{>References/Encounter/location.location.hbs ID=@encompassingEncounterIds.newId REF=(concat 'Location/' locationId.Id)}},
        {{/with}}
    {{/if}}
    
    {{#if document.custodian.assignedCustodian.representedCustodianOrganization.name._}}
        {{#with (evaluate 'Utils/GenerateOrganizationId.hbs' obj=document.custodian.assignedCustodian.representedCustodianOrganization) as |orgId|}}
            {{>Resources/Organization.hbs org=document.custodian.assignedCustodian.representedCustodianOrganization ID=orgId.Id}},
            {{>References/Composition/custodian.hbs ID=(generateUUID (toJsonString document)) REF=(concat 'Organization/' orgId.Id)}},
        {{/with}}  
    {{/if}}

    {{#each (toArray document.participant) as |participant|}}
        {{#if participant}}
            {{>Resources/RelatedPerson.hbs relatedPerson=participant.associatedEntity ID=(generateUUID (toJsonString participant.associatedEntity))}},
            {{>References/Patient/link.other.hbs ID=@metriportPatientId REF=(concat 'RelatedPerson/' (generateUUID (toJsonString participant.associatedEntity)))}},
            {{>References/RelatedPerson/patient.hbs ID=(generateUUID (toJsonString participant.associatedEntity)) REF=(concat 'Patient/' @metriportPatientId)}},
        {{/if}}
    {{/each}}

    {{#if document.author.assignedAuthor.assignedAuthoringDevice}}
        {{>Resources/Device.hbs author=document.author.assignedAuthor ID=(generateUUID (toJsonString document.author))}},
        {{>References/Composition/author.hbs ID=(generateUUID (toJsonString document)) REF=(concat 'Device/' (generateUUID (toJsonString document.author)))}},
        {{#if document.author.assignedAuthor.representedOrganization}}
            {{#with (evaluate 'Utils/GenerateOrganizationId.hbs' obj=document.author.assignedAuthor.representedOrganization) as |orgId|}}
                {{>Resources/Organization.hbs org=document.author.assignedAuthor.representedOrganization ID=orgId.Id}},
                {{>References/Device/owner.hbs ID=(generateUUID (toJsonString document.author)) REF=(concat 'Organization/' orgId.Id)}},
            {{/with}}           
        {{/if}}
    {{/if}}

    {{#each (toArray document.author) as |author|}}
      {{#if author.assignedAuthor}}
          {{#with (evaluate 'Utils/GenerateId.hbs' obj=author.assignedAuthor) as |practitionerId|}}
            {{>Resources/Practitioner.hbs practitioner=author.assignedAuthor ID=practitionerId.Id}},
            {{>References/Composition/author.hbs ID=(generateUUID (toJsonString document)) REF=(concat 'Practitioner/' practitionerId.Id)}},
          {{/with}}
      {{/if}}
    {{/each}}

    {{#with document.recordTarget.patientRole as |patientRole|}}
        {{#with (evaluate 'Utils/GeneratePatientId.hbs' obj=@metriportPatientId) as |patientId|}}
            {{>Resources/Patient.hbs patientRole=patientRole ID=patientId.Id}},
            {{#if patientRole.patient.guardian}}
                {{#each (toArray patientRole.patient.guardian) as |guardian|}}
                    {{>Resources/RelatedPerson.hbs relatedPerson=guardian ID=(generateUUID (toJsonString guardian))}},
                    {{>References/RelatedPerson/patient.hbs ID=(generateUUID (toJsonString guardian)) REF=(concat 'Patient/' patientId.Id)}},
                {{/each}}
            {{/if}}
        {{/with}}

    {{/with}}     
{{/with}}