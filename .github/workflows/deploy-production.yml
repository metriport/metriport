name: Deploy - PRODUCTION

on:
  push: # a commit to the specified branches, if any
    branches:
      - master
    paths:
      - "packages/shared/**"
      - "packages/api/**"
      - "packages/api-sdk/**"
      - "packages/commonwell-sdk/**"
      - "packages/connect-widget/**"
      - "packages/core/**"
      - "packages/ihe-gateway-sdk/**"
      - "packages/infra/**"
      - "packages/lambdas/**"
  workflow_dispatch: # manually executed by a user

jobs:
  files-changed:
    name: detect changes
    runs-on: ubuntu-latest
    timeout-minutes: 3
    # Map a step output to a job output
    outputs:
      api: ${{ steps.changes.outputs.api }}
      infra-lambdas: ${{ steps.changes.outputs.infra-lambdas }}
      widget: ${{ steps.changes.outputs.widget }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect Changes
        uses: dorny/paths-filter@4067d885736b84de7c414f582ac45897079b0a78 # v2
        id: changes
        with:
          base: "master"
          filters: |
            api:
              - "packages/shared/**"
              - "packages/api/**"
              - "packages/api-sdk/**"
              - "packages/commonwell-sdk/**"
              - "packages/core/**"
              - "package*.json"
            infra-lambdas:
              - "packages/infra/**"
              - "packages/lambdas/**"
              - "package*.json"
            widget:
              - "packages/connect-widget/**"
              - "package*.json"

  widget:
    if: needs.files-changed.outputs.widget == 'true'
    needs: files-changed
    uses: ./.github/workflows/_deploy_widget.yml
    with:
      build_env: "production"
      deploy_env: "production"
      AWS_REGION: ${{ vars.WIDGET_REGION_PRODUCTION }}
      S3_BUCKET: ${{ vars.S3_BUCKET_PRODUCTION }}
      CF_DISTRIB_ID: ${{ vars.WIDGET_CF_DISTRIB_ID_PRODUCTION }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  api-prod:
    if: needs.files-changed.outputs.api == 'true'
    needs: files-changed
    uses: ./.github/workflows/_deploy_api.yml
    with:
      deploy_env: "production"
      ECR_REPO_URI: ${{ vars.ECR_REPO_URI_PRODUCTION }}
      ECS_CLUSTER: ${{ vars.ECS_CLUSTER_PRODUCTION }}
      ECS_SERVICE: ${{ vars.ECS_SERVICE_PRODUCTION }}
      AWS_REGION: ${{ vars.API_REGION_PRODUCTION }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  api-sandbox:
    uses: ./.github/workflows/_deploy_api.yml
    needs: [api-prod]
    if: ${{ !failure() && needs.api-prod.result == 'success' }}
    with:
      deploy_env: "sandbox"
      ECR_REPO_URI: ${{ vars.ECR_REPO_URI_SANDBOX }}
      ECS_CLUSTER: ${{ vars.ECS_CLUSTER_SANDBOX }}
      ECS_SERVICE: ${{ vars.ECS_SERVICE_SANDBOX }}
      AWS_REGION: ${{ vars.API_REGION_SANDBOX }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  infra-api-lambdas:
    uses: ./.github/workflows/_deploy_cdk.yml
    if: needs.files-changed.outputs.infra-lambdas == 'true'
    needs: files-changed
    with:
      deploy_env: "production"
      cdk_stack: ${{ vars.API_STACK_NAME_PRODUCTION }}
      AWS_REGION: ${{ vars.API_REGION_PRODUCTION }}
      INFRA_CONFIG: ${{ vars.INFRA_CONFIG_PRODUCTION }}
    secrets:
      SERVICE_PAT: ${{ secrets.SERVICE_PAT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  infra-api-lambdas-sandbox:
    uses: ./.github/workflows/_deploy_cdk.yml
    needs: [infra-api-lambdas]
    if: ${{ !failure() && needs.infra-api-lambdas.result == 'success' }}
    with:
      deploy_env: "sandbox"
      cdk_stack: ${{ vars.API_STACK_NAME_SANDBOX }}
      AWS_REGION: ${{ vars.API_REGION_SANDBOX  }}
      INFRA_CONFIG: ${{ vars.INFRA_CONFIG_SANDBOX  }}
    secrets:
      SERVICE_PAT: ${{ secrets.SERVICE_PAT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  infra-widget:
    uses: ./.github/workflows/_deploy_cdk.yml
    if: needs.files-changed.outputs.infra-lambdas == 'true'
    needs: files-changed
    with:
      deploy_env: "production"
      cdk_stack: ${{ vars.WIDGET_STACK_NAME_PRODUCTION }}
      AWS_REGION: ${{ vars.WIDGET_REGION_PRODUCTION }}
      INFRA_CONFIG: ${{ vars.INFRA_CONFIG_PRODUCTION }}
    secrets:
      SERVICE_PAT: ${{ secrets.SERVICE_PAT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  release:
    uses: ./.github/workflows/_release.yml
    needs: [widget, api-sandbox, infra-api-lambdas-sandbox, infra-widget]
    # run even if one of the dependencies didn't
    # can't use ${{ ! failure() && success() }} because `success()` "Returns true when none of the previous steps have failed or been canceled."
    # can't use ${{ ! failure() && contains(needs.*.result, 'success') }} because if anything that came before succeeded, even if not a direct dependency, it will run
    if: ${{ !failure() && (needs.widget.result == 'success' || needs.api-sandbox.result == 'success' || needs.infra-api-lambdas-sandbox.result == 'success' || needs.infra-widget.result == 'success') }}
    secrets: inherit

  e2e-tests:
    uses: ./.github/workflows/_e2e-tests.yml
    needs: release
    # run even if one of the dependencies didn't
    # can't use ${{ ! failure() && success() }} because `success()` "Returns true when none of the previous steps have failed or been canceled."
    # can't use ${{ ! failure() && contains(needs.*.result, 'success') }} because if anything that came before succeeded, even if not a direct dependency, it will run
    if: ${{ !failure() && (needs.widget.result == 'success' || needs.api.result == 'success' || needs.infra-api-lambdas.result == 'success' || needs.infra-widget.result == 'success') }}
    with:
      deploy_env: "production"
      api_url: ${{ vars.API_URL_PRODUCTION }}
      fhir_url: ${{ vars.FHIR_SERVER_URL_PRODUCTION }}
      widget_url: ${{ vars.WIDGET_URL_PRODUCTION }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TEST_API_KEY: ${{ secrets.TEST_API_KEY_PRODUCTION }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
