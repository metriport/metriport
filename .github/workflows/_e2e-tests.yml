name: Reusable e2e workflow for API

on:
  workflow_call:
    inputs:
      deploy_env:
        description: "the environment we're deploying to, either 'staging', 'production', or 'sandbox'"
        required: true
        type: string
      api_url:
        description: "the url for the oss api"
        required: true
        type: string
      fhir_url:
        description: "the url for the fhir server"
        required: true
        type: string
      CONVERSION_RESULT_BUCKET_NAME:
        description: "the name of the bucket with the CDA>FHIR conversions"
        required: true
        type: string
      MEDICAL_DOCUMENTS_BUCKET_NAME:
        description: "the name of the bucket with medical documents/consolidated"
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      test_patient_id:
        description: "the ID of a test patient for e2e tests"
        required: false
        type: string
      CQ_API_MODE:
        description: "the CQ API mode to use for e2e tests"
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      TEST_API_KEY:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      NGROK_AUTHTOKEN:
        required: false
      CW_CERTIFICATE:
        required: false
      CW_PRIVATE_KEY:
        required: false
      CW_MEMBER_CERTIFICATE:
        required: false
      CW_MEMBER_PRIVATE_KEY:
        required: false
      CW_MEMBER_OID:
        required: false
      CW_MEMBER_NAME:
        required: false
      CQ_MANAGEMENT_API_KEY:
        required: false
      CQ_TEST_ORG_OID:
        required: false

jobs:
  test:
    name: E2E Tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy_env }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "18.14"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log Git Ref
        run: |
          echo "Git ref: $(git rev-parse HEAD)"
        shell: bash

      - name: Install dependencies
        run: npm run install-deps
        working-directory: "./"

      - name: Build/compile
        # build from root because of dependencies
        run: npm run build:cloud
        working-directory: "./"

      - name: Setup AWS CLI
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        working-directory: "./"

      - name: Run Tests
        run: npm run test:e2e
        working-directory: "./"
        env:
          TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
          TEST_PATIENT_ID: ${{ inputs.test_patient_id }}
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
          CW_CERTIFICATE: ${{ secrets.CW_CERTIFICATE }}
          CW_PRIVATE_KEY: ${{ secrets.CW_PRIVATE_KEY }}
          CW_MEMBER_CERTIFICATE: ${{ secrets.CW_MEMBER_CERTIFICATE }}
          CW_MEMBER_PRIVATE_KEY: ${{ secrets.CW_MEMBER_PRIVATE_KEY }}
          CW_MEMBER_OID: ${{ secrets.CW_MEMBER_OID }}
          CW_MEMBER_NAME: ${{ secrets.CW_MEMBER_NAME }}
          CQ_API_MODE: ${{ inputs.CQ_API_MODE }}
          CQ_MANAGEMENT_API_KEY: ${{ secrets.CQ_MANAGEMENT_API_KEY }}
          CQ_TEST_ORG_OID: ${{ secrets.CQ_TEST_ORG_OID }}
          API_URL: ${{ inputs.api_url }}
          FHIR_SERVER_URL: ${{ inputs.fhir_url }}
          CONVERSION_RESULT_BUCKET_NAME: ${{ inputs.CONVERSION_RESULT_BUCKET_NAME }}
          MEDICAL_DOCUMENTS_BUCKET_NAME: ${{ inputs.MEDICAL_DOCUMENTS_BUCKET_NAME }}
          AWS_REGION: ${{ inputs.AWS_REGION }}
          ENV_TYPE: ${{ inputs.deploy_env }}

      - name: Store Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            packages/api/e2e-test-results/
