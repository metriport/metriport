# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json
imports:
  fhir: ../fhir/__package__.yml

service:
  base-path: /medical/v1
  auth: true
  endpoints:
    startConsolidatedQuery:
      display-name: Start Consolidated Data Query
      docs: |
          Trigger a consolidated data query for the given patient.
          When executed,
          this endpoint triggers an asynchronous query to retrieve a Patient's consolidated data from the FHIR repository.
          Once the data is consolidated and ready for consumption,
          a webhook request is sent to your configured URL containing the Patient's
          data in FHIR-compliant format,
          based on the parameters used to trigger the query.
          You'll be able to query multiple times for the same Patient which will be added to the queue and
          processed in order. If the parameters are the same as a previous query that is still processing,
          the new query will be ignored and you'll get the status and request ID of the previous one.
          You can check the status of the data query by calling get consolidated data query.
          This endpoint also provides the ability to render a Medical Record Summary
          from the FHIR bundle as a PDF or HTML document. This will be returned via a webhook
          as a FHIR bundle with a DocumentReference resource
          that will contain a URL to retrieve the data from.,
      method: POST
      path: /patient/{id}/consolidated/query
      path-parameters:
        id:
          type: string
          docs: The ID of the Patient.
      request:
        name: GetPatientConsolidatedData
        query-parameters:
          resources:
            docs: |
              A comma separated, case sensitive list of resources to be returned. If none are provided all
              resources will be included. Metriport will automatically hydrate the initially filtered 
              resources with referenced ones to create bundle consistency.
            type: optional<string>
          dateFrom:
            docs: |
              The start date (inclusive) for which to filter returned resources -
              formatted `YYYY-MM-DD` as per ISO 8601. If not provided,
              no start date filter will be applied.
            type: optional<string>
          dateTo:
            docs: |
              The end date (inclusive) for which to filter returned resources -
              formatted `YYYY-MM-DD` as per ISO 8601. If not provided,
               no end date filter will be applied.
            type: optional<string>
          conversionType:
            docs: |
              The doc type to convert to. Either `html` or `pdf`.
            type: optional<string>
        body:
          docs: |
            Metadata holds a record of up to 50 custom string key-value pairs. Key names can be up to 40 characters long and values up to 500 characters long.
            This metadata will be returned in the webhook response.
          type: optional<map<string, string>>

      response:
        type: StartConsolidatedQueryResponse
        docs: Returns the filters used for this query, in addition to the identifier used by the system to uniquely identify this query (property `requestId`).
      examples:
        - name: Example1
          path-parameters:
            id: "12345678"
          response:
            body: $StartConsolidatedQueryResponse.Example0

    getConsolidatedQueryStatus:
      display-name: Get Consolidated Data Query status
      docs: Get the status of querying for patient's consolidated data.
      method: GET
      path: /patient/{id}/consolidated/query
      path-parameters:
        id:
          type: string
          docs: The ID of the Patient
      response:
        type: GetConsolidatedQueryStatusResponse
      examples:
        - name: Example1
          path-parameters:
            id: "12345678"
          response:
            body: $GetConsolidatedQueryStatusResponse.Example0

    getSingleConsolidatedQueryStatus:
      display-name: Get Single Consolidated Data Query status
      docs: Get the status of a single query for patient's consolidated data.
      method: GET
      path: /patient/{id}/consolidated/query/{requestId}
      path-parameters:
        id:
          type: string
          docs: The ID of the Patient
        requestId:
          type: string
          docs: The ID of the request to get the status of.
      response:
        type: GetSingleConsolidatedQueryStatusResponse
      examples:
        - name: Example1
          path-parameters:
            id: "12345678"
            requestId: "00000000-0000-0000-0000-000000000000"
          response:
            body: $GetSingleConsolidatedQueryStatusResponse.Example0


    createPatientConsolidated:
      display-name: Create Patient's Consolidated Data
      docs: Create Patient's Consolidated Data with a FHIR Bundle.
      method: PUT
      path: /patient/{id}/consolidated
      path-parameters:
        id:
          type: string
          docs: The ID of the Patient
      request:
        body: ConsolidatedBundleUpload
      response:
        type: fhir.Bundle
      examples:
        - name: Example1
          path-parameters:
            id: "12345678"
          request: $ConsolidatedBundleUpload.Example1
          response:
            body:
              resourceType: "Bundle"
              id: "12345"
              type: "transaction-response"
              entry:
                - resource: ""
                  response:
                    status: 201 Created
                    location: Observation/3/_history/1
                    etag: "1"
                    lastModified: "2023-07-27T21:29:31.491+00:00"
                    outcome:
                      resourceType: OperationOutcome
                      issue:
                        - severity: information
                          code: informational
                          details:
                            coding:
                              - system: https://public.metriport.com/fhir/StructureDefinition/operation-outcome
                                code: SUCCESSFUL_CREATE
                                display: Create succeeded.
                          diagnostics: Successfully created resource "Observation/3/_history/1". Took 7ms.

    countPatientData:
      display-name: Count Patient Data
      docs: Get a count of a Patient's data per resource.
      method: GET
      path: /patient/{id}/consolidated/count
      path-parameters:
        id:
          type: string
          docs: The ID of the Patient
      request:
        name: CountPatientConsolidateData
        query-parameters:
          resources:
            docs: |
              A comma separated, case sensitive list of resources to be returned.
              If none are provided all resources will be included.
            type: optional<string>
          dateFrom:
            docs: |
              The start date (inclusive) for which to filter returned resources -
              formatted `YYYY-MM-DD` as per ISO 8601. If not provided,
              no start date filter will be applied.
            type: optional<string>
          dateTo:
            docs: |
              The end date (inclusive) for which to filter returned resources -
              formatted `YYYY-MM-DD` as per ISO 8601. If not provided,
               no end date filter will be applied.
            type: optional<string>
      response: ConsolidatedCountResponse

types:
  StartConsolidatedQueryResponse:
    properties:
      query: PatientConsolidatedDataStatus
      message: optional<string>
    examples:
      - name: Example0
        value:
          query: $PatientConsolidatedDataStatus.Example0

  PatientConsolidatedDataStatus:
    properties:
      requestId:
        type: string
      startedAt:
        type: optional<string>
      dateFrom:
        type: optional<string>
      dateTo:
        type: optional<string>
      conversionType:
        type: ConversionTypeFHIR
      status:
        type: DocumentQueryStatusFHIR
    examples:
      - name: Example0
        value:
          requestId: "12345678"
          startedAt: "2023-07-27T21:29:31.491+00:00"
          dateFrom: "2023-07-27"
          dateTo: "2024-07-27"
          conversionType: "html"
          status: "processing"

  DocumentQueryStatusFHIR:
    enum:
      - processing
      - completed
      - failed

  ConversionTypeFHIR:
    enum:
      - html
      - pdf
      - json

  GetConsolidatedQueryStatusResponse:
    properties:
      queries: list<PatientConsolidatedDataStatus>
      message: optional<string>
    examples:
      - name: Example0
        value:
          queries:
            - $PatientConsolidatedDataStatus.Example0
            - $PatientConsolidatedDataStatus.Example0
          message: Trigger a new query by POST /patient/:id/consolidated/query; data will be sent through Webhook

  # Using an alias to avoid duplicating `PatientConsolidatedDataStatus`
  GetSingleConsolidatedQueryStatusResponse: PatientConsolidatedDataStatus

  ConsolidatedCountResponse:
    properties:
      total:
        docs: The sum of all resource type count.
        type: integer
      resources:
        docs: |
          Object containing resource types as properties and the amount of entries for
          the resource as the value (integer). Only resource types with amount
          of entries higher than one are included.
        type: map<string, integer>
      filter:
        docs: The filters used to perform this operation.
        type: Filter

  Filter:
    properties:
      resources:
        docs: |
          Comma-separated list of resource types. If not specified on the
          request, this will be `all`.
        type: string
      dateFrom:
        docs: |
          The start date (inclusive) for which to filter returned resources -
          formatted `YYYY-MM-DD` as per ISO 8601. If not provided,
          no start date filter will be applied.
        type: optional<string>
      dateTo:
        docs: |
          The end date (inclusive) for which to filter returned resources -
          formatted `YYYY-MM-DD` as per ISO 8601. If not provided,
            no end date filter will be applied.
        type: optional<string>

  ConsolidatedBundleUpload:
    properties:
      resourceType:
        type: string
        docs: The resource needs to be “Bundle”
      type:
        type: string
        docs: The type needs to be “collection”
      entry:
        type: list<map<string, unknown>>
        docs: The entry needs to be an array of FHIR resources.
    examples:
      - name: Example1
        value:
          resourceType: "Bundle"
          type: "collection"
          entry:
            [
              {
                "resource":
                  {
                    "resourceType": "Observation",
                    "code": { "text": "Cancer" },
                    "valueCodeableConcept": { "text": "NEGATIVE" },
                    "status": "final",
                    "category":
                      [
                        {
                          "coding":
                            [
                              {
                                "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                                "code": "laboratory",
                              },
                            ],
                        },
                      ],
                  },
              },
            ]
